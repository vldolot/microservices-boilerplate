services:
  kong:
    image: kong:latest
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/etc/kong/kong.yml"
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
    volumes:
      - ./kubernetes/kong:/etc/kong

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - ./monitoring/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  user:
    build:
      dockerfile: ./services/user/Dockerfile
    ports:
      - "3000:3000"
      - "50051:50051"
    volumes:
      - ./services/user:/app
      - /app/node_modules
    depends_on:
      - rabbitmq

  notification:
    build:
      dockerfile: ./services/notification/Dockerfile
    volumes:
      - ./services/notification:/app
      - /app/node_modules
    depends_on:
      - rabbitmq

  product:
    build:
      dockerfile: ./services/product/Dockerfile
    ports:
      - "3002:3000"
    volumes:
      - ./services/product:/app
      - /app/node_modules
    depends_on:
      - user